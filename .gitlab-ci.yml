
# Copyright (c) 2015-2018 Agalmic Ventures LLC (www.agalmicventures.com)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#No before script because the virtual environment is only used for Ansible

stages:
  - test

smoke_test_playbooks_job:
  stage: test
  script:
    - python3 -m venv env
    - source env/bin/activate
    - python3 -m pip install -r requirements.txt
    - ansible-playbook -i playbooks/local_inventory playbooks/site.yml --list-tags
  only:
    - master

help_test_job:
  stage: test
  script:
    - scripts/AugmentLines.py -h
    - scripts/CheckPythonSyntax.py -h
    - scripts/ConvertEpochTime.py -h
    - scripts/CsvToJson.py -h
    - scripts/ExamineBinary.py -h
    - scripts/FindHomoglyphs.py -h
    - scripts/GenerateConfigs.py -h
    - scripts/IPythonCleanup.py -h
    - scripts/IPythonExtractCode.py -h
    - scripts/JsonToXml.py -h
    - scripts/MulticastPeek.py -h
    - scripts/MulticastPoke.py -h
    - scripts/OrganizeTimestampedFiles.py -h
    - scripts/Parallelize.py -h
    - scripts/Prepend.py -h
    - scripts/RandomSleep.py -h
    - scripts/SpacesToTabs.py -h
    - scripts/TabsToSpaces.py -h
    - scripts/Template.py -h
    - scripts/WatchFiles.py -h

    - "! scripts/create_ramdisk.sh"
    - "! scripts/git_author_files.sh"
    - "! scripts/git_author_line_counts.sh"
    - "! scripts/git_file_authors.sh"
    - "! scripts/git"
    - "! scripts/hg"
    - "! scripts/upgrade_python3_venv.sh"
  only:
    - master

functional_test_check_config_job:
  stage: test
  script:
    - scripts/check_config.sh
  only:
    - master

functional_test_check_python_syntax_job:
  stage: test
  script:
    - scripts/CheckPythonSyntax.py scripts/AugmentLines.py
    - scripts/CheckPythonSyntax.py scripts/CheckPythonSyntax.py
    - scripts/CheckPythonSyntax.py scripts/ConvertEpochTime.py
    #Probably don't need to do lots more of this

    - "! scripts/CheckPythonSyntax.py scripts/create_ramdisk.sh"
    - "! scripts/CheckPythonSyntax.py scripts/git_author_files.sh"
  only:
    - master

functional_test_convert_epoch_time_job:
  stage: test
  script:
    - scripts/ConvertEpochTime.py 0
    - scripts/ConvertEpochTime.py 1000
    - scripts/ConvertEpochTime.py 1000000
    - scripts/ConvertEpochTime.py 1000000000
  only:
    - master

functional_test_examine_binary:
  stage: test
  script:
    #Code
    - scripts/ExamineBinary.py scripts/ExamineBinary.py
    #English
    - scripts/ExamineBinary.py scripts/README.md
  only:
    - master

functional_test_parallelize_job:
  stage: test
  script:
    #Not the most traditional use of this script, but since the "run ID" is 0,
    #it will make the random sleeps be between 0 and n seconds
    - time scripts/Parallelize.py -p 2 -s 1 scripts/RandomSleep.py 0 4 2 3 3 4 3 2 3
  only:
    - master

functional_test_sleep_job:
  stage: test
  script:
    - time scripts/RandomSleep.py 0 1
    - time scripts/RandomSleep.py 1 3
  only:
    - master

functional_test_spaces_tabs_job:
  stage: test
  script:
    #These should be commutative and idempotent when applied repeatedly
    #Original script starts with tabs
    - TEST_SCRIPT=scripts/Parallelize.py
    - cp $TEST_SCRIPT Test.py
    - scripts/SpacesToTabs.py Test.py
    - diff $TEST_SCRIPT Test.py
    - scripts/TabsToSpaces.py Test.py
    - "! diff $TEST_SCRIPT Test.py"
    - scripts/SpacesToTabs.py Test.py
    - diff $TEST_SCRIPT Test.py
    - rm Test.py
  only:
    - master
